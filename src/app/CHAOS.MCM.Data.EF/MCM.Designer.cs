//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("MCMModel", "FK_AccessPoint_AccessPoint_Group_Join", "AccessPoint", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CHAOS.MCM.Data.EF.AccessPoint), "AccessPoint_Group_Join", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CHAOS.MCM.Data.EF.AccessPoint_Group_Join), true)]
[assembly: EdmRelationshipAttribute("MCMModel", "FK_AccessPoint_AccessPoint_Object_Join", "AccessPoint", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CHAOS.MCM.Data.EF.AccessPoint), "AccessPoint_Object_Join", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CHAOS.MCM.Data.EF.AccessPoint_Object_Join), true)]
[assembly: EdmRelationshipAttribute("MCMModel", "FK_AccessPoint_AccessPoint_User_Join", "AccessPoint", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CHAOS.MCM.Data.EF.AccessPoint), "AccessPoint_User_Join", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CHAOS.MCM.Data.EF.AccessPoint_User_Join), true)]
[assembly: EdmRelationshipAttribute("MCMModel", "FK_AccessPoint_GUID_Conversion_AccessPointGUID", "AccessPoint", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CHAOS.MCM.Data.EF.AccessPoint), "Conversion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CHAOS.MCM.Data.EF.Conversion), true)]
[assembly: EdmRelationshipAttribute("MCMModel", "FK_Destination_ID_AccessProvider_DestinationID", "Destination", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CHAOS.MCM.Data.EF.Destination), "AccessProvider", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CHAOS.MCM.Data.EF.AccessProvider), true)]
[assembly: EdmRelationshipAttribute("MCMModel", "FK_Destination_ID_Conversion_DestinationID", "Destination", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CHAOS.MCM.Data.EF.Destination), "Conversion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CHAOS.MCM.Data.EF.Conversion), true)]
[assembly: EdmRelationshipAttribute("MCMModel", "FK_Format_ID_Conversion_FormatID", "Format", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CHAOS.MCM.Data.EF.Format), "Conversion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CHAOS.MCM.Data.EF.Conversion), true)]
[assembly: EdmRelationshipAttribute("MCMModel", "FK_FormatCategory_ID_Conversion_FormatCategoryID", "FormatCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CHAOS.MCM.Data.EF.FormatCategory), "Conversion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CHAOS.MCM.Data.EF.Conversion), true)]
[assembly: EdmRelationshipAttribute("MCMModel", "FK_Destination_ID_File_DestinationID", "Destination", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CHAOS.MCM.Data.EF.Destination), "File", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CHAOS.MCM.Data.EF.File), true)]
[assembly: EdmRelationshipAttribute("MCMModel", "FK_File_ID_File_ParentID", "File", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CHAOS.MCM.Data.EF.File), "File1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CHAOS.MCM.Data.EF.File), true)]
[assembly: EdmRelationshipAttribute("MCMModel", "FK_Format_ID_File_FormatID", "Format", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CHAOS.MCM.Data.EF.Format), "File", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CHAOS.MCM.Data.EF.File), true)]
[assembly: EdmRelationshipAttribute("MCMModel", "FK_Folder_ID_Folder_Group_Join_FolderID", "Folder", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CHAOS.MCM.Data.EF.Folder), "Folder_Group_Join", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CHAOS.MCM.Data.EF.Folder_Group_Join), true)]
[assembly: EdmRelationshipAttribute("MCMModel", "FK_Folder_ID_Folder_ParentID", "Folder", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CHAOS.MCM.Data.EF.Folder), "Folder1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CHAOS.MCM.Data.EF.Folder), true)]
[assembly: EdmRelationshipAttribute("MCMModel", "FK_Folder_ID_Folder_User_Join_FolderID", "Folder", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CHAOS.MCM.Data.EF.Folder), "Folder_User_Join", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CHAOS.MCM.Data.EF.Folder_User_Join), true)]
[assembly: EdmRelationshipAttribute("MCMModel", "FK_Folder_ID_Object_Folder_Join_FolderID", "Folder", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CHAOS.MCM.Data.EF.Folder), "Object_Folder_Join", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CHAOS.MCM.Data.EF.Object_Folder_Join), true)]
[assembly: EdmRelationshipAttribute("MCMModel", "FK_FolderType_ID_Folder_FolderTypeID", "FolderType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CHAOS.MCM.Data.EF.FolderType), "Folder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CHAOS.MCM.Data.EF.Folder), true)]
[assembly: EdmRelationshipAttribute("MCMModel", "FK_FormatCategory_ID_Format_FormatCategoryID", "FormatCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CHAOS.MCM.Data.EF.FormatCategory), "Format", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CHAOS.MCM.Data.EF.Format), true)]
[assembly: EdmRelationshipAttribute("MCMModel", "FK_FormatType_ID_FormatCategory_FormatTypeID", "FormatType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CHAOS.MCM.Data.EF.FormatType), "FormatCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CHAOS.MCM.Data.EF.FormatCategory), true)]
[assembly: EdmRelationshipAttribute("MCMModel", "FK_Language_LanguageCode_Metadata_LanguageCode", "Language", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CHAOS.MCM.Data.EF.Language), "Metadata", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CHAOS.MCM.Data.EF.Metadata), true)]
[assembly: EdmRelationshipAttribute("MCMModel", "FK_MetadataSchema_GUID_Metadata_MetadataSchemaGUID", "MetadataSchema", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CHAOS.MCM.Data.EF.MetadataSchema), "Metadata", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CHAOS.MCM.Data.EF.Metadata), true)]
[assembly: EdmRelationshipAttribute("MCMModel", "FK_MS_GUID_MS_Group_Join_MSGUID", "MetadataSchema", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CHAOS.MCM.Data.EF.MetadataSchema), "MetadataSchema_Group_Join", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CHAOS.MCM.Data.EF.MetadataSchema_Group_Join), true)]
[assembly: EdmRelationshipAttribute("MCMModel", "FK_MS_GUID_MS_User_Join_MetadataSchemaGUID", "MetadataSchema", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CHAOS.MCM.Data.EF.MetadataSchema), "MetadataSchema_User_Join", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CHAOS.MCM.Data.EF.MetadataSchema_User_Join), true)]
[assembly: EdmRelationshipAttribute("MCMModel", "FK_ObjectFolderType_ID_Object_Folder_Join_ObjectFolderTypeID", "ObjectFolderType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CHAOS.MCM.Data.EF.ObjectFolderType), "Object_Folder_Join", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CHAOS.MCM.Data.EF.Object_Folder_Join), true)]
[assembly: EdmRelationshipAttribute("MCMModel", "FK_ObjectRelationType_ID_Object_Object_Join_ObjectRelationTypeID", "ObjectRelationType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CHAOS.MCM.Data.EF.ObjectRelationType), "Object_Object_Join", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CHAOS.MCM.Data.EF.Object_Object_Join), true)]

#endregion

namespace CHAOS.MCM.Data.EF
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MCMEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MCMEntities object using the connection string found in the 'MCMEntities' section of the application configuration file.
        /// </summary>
        public MCMEntities() : base("name=MCMEntities", "MCMEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MCMEntities object.
        /// </summary>
        public MCMEntities(string connectionString) : base(connectionString, "MCMEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MCMEntities object.
        /// </summary>
        public MCMEntities(EntityConnection connection) : base(connection, "MCMEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccessPoint> AccessPoint
        {
            get
            {
                if ((_AccessPoint == null))
                {
                    _AccessPoint = base.CreateObjectSet<AccessPoint>("AccessPoint");
                }
                return _AccessPoint;
            }
        }
        private ObjectSet<AccessPoint> _AccessPoint;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccessPoint_Group_Join> AccessPoint_Group_Join
        {
            get
            {
                if ((_AccessPoint_Group_Join == null))
                {
                    _AccessPoint_Group_Join = base.CreateObjectSet<AccessPoint_Group_Join>("AccessPoint_Group_Join");
                }
                return _AccessPoint_Group_Join;
            }
        }
        private ObjectSet<AccessPoint_Group_Join> _AccessPoint_Group_Join;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccessPoint_Object_Join> AccessPoint_Object_Join
        {
            get
            {
                if ((_AccessPoint_Object_Join == null))
                {
                    _AccessPoint_Object_Join = base.CreateObjectSet<AccessPoint_Object_Join>("AccessPoint_Object_Join");
                }
                return _AccessPoint_Object_Join;
            }
        }
        private ObjectSet<AccessPoint_Object_Join> _AccessPoint_Object_Join;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccessPoint_User_Join> AccessPoint_User_Join
        {
            get
            {
                if ((_AccessPoint_User_Join == null))
                {
                    _AccessPoint_User_Join = base.CreateObjectSet<AccessPoint_User_Join>("AccessPoint_User_Join");
                }
                return _AccessPoint_User_Join;
            }
        }
        private ObjectSet<AccessPoint_User_Join> _AccessPoint_User_Join;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccessProvider> AccessProvider
        {
            get
            {
                if ((_AccessProvider == null))
                {
                    _AccessProvider = base.CreateObjectSet<AccessProvider>("AccessProvider");
                }
                return _AccessProvider;
            }
        }
        private ObjectSet<AccessProvider> _AccessProvider;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Conversion> Conversion
        {
            get
            {
                if ((_Conversion == null))
                {
                    _Conversion = base.CreateObjectSet<Conversion>("Conversion");
                }
                return _Conversion;
            }
        }
        private ObjectSet<Conversion> _Conversion;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Destination> Destination
        {
            get
            {
                if ((_Destination == null))
                {
                    _Destination = base.CreateObjectSet<Destination>("Destination");
                }
                return _Destination;
            }
        }
        private ObjectSet<Destination> _Destination;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<File> File
        {
            get
            {
                if ((_File == null))
                {
                    _File = base.CreateObjectSet<File>("File");
                }
                return _File;
            }
        }
        private ObjectSet<File> _File;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Folder> Folder
        {
            get
            {
                if ((_Folder == null))
                {
                    _Folder = base.CreateObjectSet<Folder>("Folder");
                }
                return _Folder;
            }
        }
        private ObjectSet<Folder> _Folder;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Folder_Group_Join> Folder_Group_Join
        {
            get
            {
                if ((_Folder_Group_Join == null))
                {
                    _Folder_Group_Join = base.CreateObjectSet<Folder_Group_Join>("Folder_Group_Join");
                }
                return _Folder_Group_Join;
            }
        }
        private ObjectSet<Folder_Group_Join> _Folder_Group_Join;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Folder_User_Join> Folder_User_Join
        {
            get
            {
                if ((_Folder_User_Join == null))
                {
                    _Folder_User_Join = base.CreateObjectSet<Folder_User_Join>("Folder_User_Join");
                }
                return _Folder_User_Join;
            }
        }
        private ObjectSet<Folder_User_Join> _Folder_User_Join;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FolderType> FolderType
        {
            get
            {
                if ((_FolderType == null))
                {
                    _FolderType = base.CreateObjectSet<FolderType>("FolderType");
                }
                return _FolderType;
            }
        }
        private ObjectSet<FolderType> _FolderType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Format> Format
        {
            get
            {
                if ((_Format == null))
                {
                    _Format = base.CreateObjectSet<Format>("Format");
                }
                return _Format;
            }
        }
        private ObjectSet<Format> _Format;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FormatCategory> FormatCategory
        {
            get
            {
                if ((_FormatCategory == null))
                {
                    _FormatCategory = base.CreateObjectSet<FormatCategory>("FormatCategory");
                }
                return _FormatCategory;
            }
        }
        private ObjectSet<FormatCategory> _FormatCategory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FormatType> FormatType
        {
            get
            {
                if ((_FormatType == null))
                {
                    _FormatType = base.CreateObjectSet<FormatType>("FormatType");
                }
                return _FormatType;
            }
        }
        private ObjectSet<FormatType> _FormatType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Language> Language
        {
            get
            {
                if ((_Language == null))
                {
                    _Language = base.CreateObjectSet<Language>("Language");
                }
                return _Language;
            }
        }
        private ObjectSet<Language> _Language;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Metadata> Metadata
        {
            get
            {
                if ((_Metadata == null))
                {
                    _Metadata = base.CreateObjectSet<Metadata>("Metadata");
                }
                return _Metadata;
            }
        }
        private ObjectSet<Metadata> _Metadata;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MetadataSchema> MetadataSchema
        {
            get
            {
                if ((_MetadataSchema == null))
                {
                    _MetadataSchema = base.CreateObjectSet<MetadataSchema>("MetadataSchema");
                }
                return _MetadataSchema;
            }
        }
        private ObjectSet<MetadataSchema> _MetadataSchema;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MetadataSchema_Group_Join> MetadataSchema_Group_Join
        {
            get
            {
                if ((_MetadataSchema_Group_Join == null))
                {
                    _MetadataSchema_Group_Join = base.CreateObjectSet<MetadataSchema_Group_Join>("MetadataSchema_Group_Join");
                }
                return _MetadataSchema_Group_Join;
            }
        }
        private ObjectSet<MetadataSchema_Group_Join> _MetadataSchema_Group_Join;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MetadataSchema_User_Join> MetadataSchema_User_Join
        {
            get
            {
                if ((_MetadataSchema_User_Join == null))
                {
                    _MetadataSchema_User_Join = base.CreateObjectSet<MetadataSchema_User_Join>("MetadataSchema_User_Join");
                }
                return _MetadataSchema_User_Join;
            }
        }
        private ObjectSet<MetadataSchema_User_Join> _MetadataSchema_User_Join;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Object_Folder_Join> Object_Folder_Join
        {
            get
            {
                if ((_Object_Folder_Join == null))
                {
                    _Object_Folder_Join = base.CreateObjectSet<Object_Folder_Join>("Object_Folder_Join");
                }
                return _Object_Folder_Join;
            }
        }
        private ObjectSet<Object_Folder_Join> _Object_Folder_Join;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Object_Object_Join> Object_Object_Join
        {
            get
            {
                if ((_Object_Object_Join == null))
                {
                    _Object_Object_Join = base.CreateObjectSet<Object_Object_Join>("Object_Object_Join");
                }
                return _Object_Object_Join;
            }
        }
        private ObjectSet<Object_Object_Join> _Object_Object_Join;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ObjectFolderType> ObjectFolderType
        {
            get
            {
                if ((_ObjectFolderType == null))
                {
                    _ObjectFolderType = base.CreateObjectSet<ObjectFolderType>("ObjectFolderType");
                }
                return _ObjectFolderType;
            }
        }
        private ObjectSet<ObjectFolderType> _ObjectFolderType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ObjectRelationType> ObjectRelationType
        {
            get
            {
                if ((_ObjectRelationType == null))
                {
                    _ObjectRelationType = base.CreateObjectSet<ObjectRelationType>("ObjectRelationType");
                }
                return _ObjectRelationType;
            }
        }
        private ObjectSet<ObjectRelationType> _ObjectRelationType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ObjectType> ObjectType
        {
            get
            {
                if ((_ObjectType == null))
                {
                    _ObjectType = base.CreateObjectSet<ObjectType>("ObjectType");
                }
                return _ObjectType;
            }
        }
        private ObjectSet<ObjectType> _ObjectType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Permission> Permission
        {
            get
            {
                if ((_Permission == null))
                {
                    _Permission = base.CreateObjectSet<Permission>("Permission");
                }
                return _Permission;
            }
        }
        private ObjectSet<Permission> _Permission;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DestinationInfo> DestinationInfo
        {
            get
            {
                if ((_DestinationInfo == null))
                {
                    _DestinationInfo = base.CreateObjectSet<DestinationInfo>("DestinationInfo");
                }
                return _DestinationInfo;
            }
        }
        private ObjectSet<DestinationInfo> _DestinationInfo;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FileInfo> FileInfo
        {
            get
            {
                if ((_FileInfo == null))
                {
                    _FileInfo = base.CreateObjectSet<FileInfo>("FileInfo");
                }
                return _FileInfo;
            }
        }
        private ObjectSet<FileInfo> _FileInfo;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FolderInfo> FolderInfo
        {
            get
            {
                if ((_FolderInfo == null))
                {
                    _FolderInfo = base.CreateObjectSet<FolderInfo>("FolderInfo");
                }
                return _FolderInfo;
            }
        }
        private ObjectSet<FolderInfo> _FolderInfo;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccessPoint EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccessPoint(AccessPoint accessPoint)
        {
            base.AddObject("AccessPoint", accessPoint);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccessPoint_Group_Join EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccessPoint_Group_Join(AccessPoint_Group_Join accessPoint_Group_Join)
        {
            base.AddObject("AccessPoint_Group_Join", accessPoint_Group_Join);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccessPoint_Object_Join EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccessPoint_Object_Join(AccessPoint_Object_Join accessPoint_Object_Join)
        {
            base.AddObject("AccessPoint_Object_Join", accessPoint_Object_Join);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccessPoint_User_Join EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccessPoint_User_Join(AccessPoint_User_Join accessPoint_User_Join)
        {
            base.AddObject("AccessPoint_User_Join", accessPoint_User_Join);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccessProvider EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccessProvider(AccessProvider accessProvider)
        {
            base.AddObject("AccessProvider", accessProvider);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Conversion EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConversion(Conversion conversion)
        {
            base.AddObject("Conversion", conversion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Destination EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDestination(Destination destination)
        {
            base.AddObject("Destination", destination);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the File EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFile(File file)
        {
            base.AddObject("File", file);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Folder EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFolder(Folder folder)
        {
            base.AddObject("Folder", folder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Folder_Group_Join EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFolder_Group_Join(Folder_Group_Join folder_Group_Join)
        {
            base.AddObject("Folder_Group_Join", folder_Group_Join);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Folder_User_Join EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFolder_User_Join(Folder_User_Join folder_User_Join)
        {
            base.AddObject("Folder_User_Join", folder_User_Join);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FolderType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFolderType(FolderType folderType)
        {
            base.AddObject("FolderType", folderType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Format EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFormat(Format format)
        {
            base.AddObject("Format", format);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FormatCategory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFormatCategory(FormatCategory formatCategory)
        {
            base.AddObject("FormatCategory", formatCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FormatType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFormatType(FormatType formatType)
        {
            base.AddObject("FormatType", formatType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Language EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLanguage(Language language)
        {
            base.AddObject("Language", language);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Metadata EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMetadata(Metadata metadata)
        {
            base.AddObject("Metadata", metadata);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MetadataSchema EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMetadataSchema(MetadataSchema metadataSchema)
        {
            base.AddObject("MetadataSchema", metadataSchema);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MetadataSchema_Group_Join EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMetadataSchema_Group_Join(MetadataSchema_Group_Join metadataSchema_Group_Join)
        {
            base.AddObject("MetadataSchema_Group_Join", metadataSchema_Group_Join);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MetadataSchema_User_Join EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMetadataSchema_User_Join(MetadataSchema_User_Join metadataSchema_User_Join)
        {
            base.AddObject("MetadataSchema_User_Join", metadataSchema_User_Join);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Object_Folder_Join EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToObject_Folder_Join(Object_Folder_Join object_Folder_Join)
        {
            base.AddObject("Object_Folder_Join", object_Folder_Join);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Object_Object_Join EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToObject_Object_Join(Object_Object_Join object_Object_Join)
        {
            base.AddObject("Object_Object_Join", object_Object_Join);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ObjectFolderType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToObjectFolderType(ObjectFolderType objectFolderType)
        {
            base.AddObject("ObjectFolderType", objectFolderType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ObjectRelationType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToObjectRelationType(ObjectRelationType objectRelationType)
        {
            base.AddObject("ObjectRelationType", objectRelationType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ObjectType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToObjectType(ObjectType objectType)
        {
            base.AddObject("ObjectType", objectType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Permission EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPermission(Permission permission)
        {
            base.AddObject("Permission", permission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DestinationInfo EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDestinationInfo(DestinationInfo destinationInfo)
        {
            base.AddObject("DestinationInfo", destinationInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FileInfo EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFileInfo(FileInfo fileInfo)
        {
            base.AddObject("FileInfo", fileInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FolderInfo EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFolderInfo(FolderInfo folderInfo)
        {
            base.AddObject("FolderInfo", folderInfo);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="subscriptionGUID">No Metadata Documentation available.</param>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="parentID">No Metadata Documentation available.</param>
        /// <param name="folderTypeID">No Metadata Documentation available.</param>
        /// <param name="subscriptionPermission">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> Folder_Create(global::System.Byte[] subscriptionGUID, global::System.String name, Nullable<global::System.Int32> parentID, Nullable<global::System.Int32> folderTypeID, Nullable<global::System.Int32> subscriptionPermission)
        {
            ObjectParameter subscriptionGUIDParameter;
            if (subscriptionGUID != null)
            {
                subscriptionGUIDParameter = new ObjectParameter("SubscriptionGUID", subscriptionGUID);
            }
            else
            {
                subscriptionGUIDParameter = new ObjectParameter("SubscriptionGUID", typeof(global::System.Byte[]));
            }
    
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            ObjectParameter parentIDParameter;
            if (parentID.HasValue)
            {
                parentIDParameter = new ObjectParameter("ParentID", parentID);
            }
            else
            {
                parentIDParameter = new ObjectParameter("ParentID", typeof(global::System.Int32));
            }
    
            ObjectParameter folderTypeIDParameter;
            if (folderTypeID.HasValue)
            {
                folderTypeIDParameter = new ObjectParameter("FolderTypeID", folderTypeID);
            }
            else
            {
                folderTypeIDParameter = new ObjectParameter("FolderTypeID", typeof(global::System.Int32));
            }
    
            ObjectParameter subscriptionPermissionParameter;
            if (subscriptionPermission.HasValue)
            {
                subscriptionPermissionParameter = new ObjectParameter("SubscriptionPermission", subscriptionPermission);
            }
            else
            {
                subscriptionPermissionParameter = new ObjectParameter("SubscriptionPermission", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("Folder_Create", subscriptionGUIDParameter, nameParameter, parentIDParameter, folderTypeIDParameter, subscriptionPermissionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="systemPermission">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> FolderType_Create(global::System.String name, Nullable<global::System.Int32> systemPermission)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            ObjectParameter systemPermissionParameter;
            if (systemPermission.HasValue)
            {
                systemPermissionParameter = new ObjectParameter("SystemPermission", systemPermission);
            }
            else
            {
                systemPermissionParameter = new ObjectParameter("SystemPermission", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("FolderType_Create", nameParameter, systemPermissionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int PreTest()
        {
            return base.ExecuteFunction("PreTest");
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCMModel", Name="AccessPoint")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccessPoint : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccessPoint object.
        /// </summary>
        /// <param name="gUID">Initial value of the GUID property.</param>
        /// <param name="subscriptionGUID">Initial value of the SubscriptionGUID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static AccessPoint CreateAccessPoint(global::System.Guid gUID, global::System.Guid subscriptionGUID, global::System.String name, global::System.DateTime dateCreated)
        {
            AccessPoint accessPoint = new AccessPoint();
            accessPoint.GUID = gUID;
            accessPoint.SubscriptionGUID = subscriptionGUID;
            accessPoint.Name = name;
            accessPoint.DateCreated = dateCreated;
            return accessPoint;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GUID
        {
            get
            {
                return _GUID;
            }
            set
            {
                if (_GUID != value)
                {
                    OnGUIDChanging(value);
                    ReportPropertyChanging("GUID");
                    _GUID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GUID");
                    OnGUIDChanged();
                }
            }
        }
        private global::System.Guid _GUID;
        partial void OnGUIDChanging(global::System.Guid value);
        partial void OnGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SubscriptionGUID
        {
            get
            {
                return _SubscriptionGUID;
            }
            set
            {
                OnSubscriptionGUIDChanging(value);
                ReportPropertyChanging("SubscriptionGUID");
                _SubscriptionGUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubscriptionGUID");
                OnSubscriptionGUIDChanged();
            }
        }
        private global::System.Guid _SubscriptionGUID;
        partial void OnSubscriptionGUIDChanging(global::System.Guid value);
        partial void OnSubscriptionGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_AccessPoint_AccessPoint_Group_Join", "AccessPoint_Group_Join")]
        public EntityCollection<AccessPoint_Group_Join> AccessPoint_Group_Join
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccessPoint_Group_Join>("MCMModel.FK_AccessPoint_AccessPoint_Group_Join", "AccessPoint_Group_Join");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccessPoint_Group_Join>("MCMModel.FK_AccessPoint_AccessPoint_Group_Join", "AccessPoint_Group_Join", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_AccessPoint_AccessPoint_Object_Join", "AccessPoint_Object_Join")]
        public EntityCollection<AccessPoint_Object_Join> AccessPoint_Object_Join
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccessPoint_Object_Join>("MCMModel.FK_AccessPoint_AccessPoint_Object_Join", "AccessPoint_Object_Join");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccessPoint_Object_Join>("MCMModel.FK_AccessPoint_AccessPoint_Object_Join", "AccessPoint_Object_Join", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_AccessPoint_AccessPoint_User_Join", "AccessPoint_User_Join")]
        public EntityCollection<AccessPoint_User_Join> AccessPoint_User_Join
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccessPoint_User_Join>("MCMModel.FK_AccessPoint_AccessPoint_User_Join", "AccessPoint_User_Join");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccessPoint_User_Join>("MCMModel.FK_AccessPoint_AccessPoint_User_Join", "AccessPoint_User_Join", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_AccessPoint_GUID_Conversion_AccessPointGUID", "Conversion")]
        public EntityCollection<Conversion> Conversion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Conversion>("MCMModel.FK_AccessPoint_GUID_Conversion_AccessPointGUID", "Conversion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Conversion>("MCMModel.FK_AccessPoint_GUID_Conversion_AccessPointGUID", "Conversion", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCMModel", Name="AccessPoint_Group_Join")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccessPoint_Group_Join : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccessPoint_Group_Join object.
        /// </summary>
        /// <param name="accessPointGUID">Initial value of the AccessPointGUID property.</param>
        /// <param name="groupGUID">Initial value of the GroupGUID property.</param>
        /// <param name="permission">Initial value of the Permission property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static AccessPoint_Group_Join CreateAccessPoint_Group_Join(global::System.Guid accessPointGUID, global::System.Guid groupGUID, global::System.Int64 permission, global::System.DateTime dateCreated)
        {
            AccessPoint_Group_Join accessPoint_Group_Join = new AccessPoint_Group_Join();
            accessPoint_Group_Join.AccessPointGUID = accessPointGUID;
            accessPoint_Group_Join.GroupGUID = groupGUID;
            accessPoint_Group_Join.Permission = permission;
            accessPoint_Group_Join.DateCreated = dateCreated;
            return accessPoint_Group_Join;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AccessPointGUID
        {
            get
            {
                return _AccessPointGUID;
            }
            set
            {
                if (_AccessPointGUID != value)
                {
                    OnAccessPointGUIDChanging(value);
                    ReportPropertyChanging("AccessPointGUID");
                    _AccessPointGUID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccessPointGUID");
                    OnAccessPointGUIDChanged();
                }
            }
        }
        private global::System.Guid _AccessPointGUID;
        partial void OnAccessPointGUIDChanging(global::System.Guid value);
        partial void OnAccessPointGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GroupGUID
        {
            get
            {
                return _GroupGUID;
            }
            set
            {
                if (_GroupGUID != value)
                {
                    OnGroupGUIDChanging(value);
                    ReportPropertyChanging("GroupGUID");
                    _GroupGUID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GroupGUID");
                    OnGroupGUIDChanged();
                }
            }
        }
        private global::System.Guid _GroupGUID;
        partial void OnGroupGUIDChanging(global::System.Guid value);
        partial void OnGroupGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Permission
        {
            get
            {
                return _Permission;
            }
            set
            {
                OnPermissionChanging(value);
                ReportPropertyChanging("Permission");
                _Permission = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Permission");
                OnPermissionChanged();
            }
        }
        private global::System.Int64 _Permission;
        partial void OnPermissionChanging(global::System.Int64 value);
        partial void OnPermissionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_AccessPoint_AccessPoint_Group_Join", "AccessPoint")]
        public AccessPoint AccessPoint
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessPoint>("MCMModel.FK_AccessPoint_AccessPoint_Group_Join", "AccessPoint").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessPoint>("MCMModel.FK_AccessPoint_AccessPoint_Group_Join", "AccessPoint").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccessPoint> AccessPointReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessPoint>("MCMModel.FK_AccessPoint_AccessPoint_Group_Join", "AccessPoint");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AccessPoint>("MCMModel.FK_AccessPoint_AccessPoint_Group_Join", "AccessPoint", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCMModel", Name="AccessPoint_Object_Join")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccessPoint_Object_Join : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccessPoint_Object_Join object.
        /// </summary>
        /// <param name="accessPointGUID">Initial value of the AccessPointGUID property.</param>
        /// <param name="objectGUID">Initial value of the ObjectGUID property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="dateModified">Initial value of the DateModified property.</param>
        public static AccessPoint_Object_Join CreateAccessPoint_Object_Join(global::System.Guid accessPointGUID, global::System.Guid objectGUID, global::System.DateTime dateCreated, global::System.DateTime dateModified)
        {
            AccessPoint_Object_Join accessPoint_Object_Join = new AccessPoint_Object_Join();
            accessPoint_Object_Join.AccessPointGUID = accessPointGUID;
            accessPoint_Object_Join.ObjectGUID = objectGUID;
            accessPoint_Object_Join.DateCreated = dateCreated;
            accessPoint_Object_Join.DateModified = dateModified;
            return accessPoint_Object_Join;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AccessPointGUID
        {
            get
            {
                return _AccessPointGUID;
            }
            set
            {
                if (_AccessPointGUID != value)
                {
                    OnAccessPointGUIDChanging(value);
                    ReportPropertyChanging("AccessPointGUID");
                    _AccessPointGUID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccessPointGUID");
                    OnAccessPointGUIDChanged();
                }
            }
        }
        private global::System.Guid _AccessPointGUID;
        partial void OnAccessPointGUIDChanging(global::System.Guid value);
        partial void OnAccessPointGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ObjectGUID
        {
            get
            {
                return _ObjectGUID;
            }
            set
            {
                if (_ObjectGUID != value)
                {
                    OnObjectGUIDChanging(value);
                    ReportPropertyChanging("ObjectGUID");
                    _ObjectGUID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectGUID");
                    OnObjectGUIDChanged();
                }
            }
        }
        private global::System.Guid _ObjectGUID;
        partial void OnObjectGUIDChanging(global::System.Guid value);
        partial void OnObjectGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateModified
        {
            get
            {
                return _DateModified;
            }
            set
            {
                OnDateModifiedChanging(value);
                ReportPropertyChanging("DateModified");
                _DateModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateModified");
                OnDateModifiedChanged();
            }
        }
        private global::System.DateTime _DateModified;
        partial void OnDateModifiedChanging(global::System.DateTime value);
        partial void OnDateModifiedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_AccessPoint_AccessPoint_Object_Join", "AccessPoint")]
        public AccessPoint AccessPoint
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessPoint>("MCMModel.FK_AccessPoint_AccessPoint_Object_Join", "AccessPoint").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessPoint>("MCMModel.FK_AccessPoint_AccessPoint_Object_Join", "AccessPoint").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccessPoint> AccessPointReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessPoint>("MCMModel.FK_AccessPoint_AccessPoint_Object_Join", "AccessPoint");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AccessPoint>("MCMModel.FK_AccessPoint_AccessPoint_Object_Join", "AccessPoint", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCMModel", Name="AccessPoint_User_Join")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccessPoint_User_Join : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccessPoint_User_Join object.
        /// </summary>
        /// <param name="accessPointGUID">Initial value of the AccessPointGUID property.</param>
        /// <param name="userGUID">Initial value of the UserGUID property.</param>
        /// <param name="permission">Initial value of the Permission property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static AccessPoint_User_Join CreateAccessPoint_User_Join(global::System.Guid accessPointGUID, global::System.Guid userGUID, global::System.Int64 permission, global::System.DateTime dateCreated)
        {
            AccessPoint_User_Join accessPoint_User_Join = new AccessPoint_User_Join();
            accessPoint_User_Join.AccessPointGUID = accessPointGUID;
            accessPoint_User_Join.UserGUID = userGUID;
            accessPoint_User_Join.Permission = permission;
            accessPoint_User_Join.DateCreated = dateCreated;
            return accessPoint_User_Join;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AccessPointGUID
        {
            get
            {
                return _AccessPointGUID;
            }
            set
            {
                if (_AccessPointGUID != value)
                {
                    OnAccessPointGUIDChanging(value);
                    ReportPropertyChanging("AccessPointGUID");
                    _AccessPointGUID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccessPointGUID");
                    OnAccessPointGUIDChanged();
                }
            }
        }
        private global::System.Guid _AccessPointGUID;
        partial void OnAccessPointGUIDChanging(global::System.Guid value);
        partial void OnAccessPointGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserGUID
        {
            get
            {
                return _UserGUID;
            }
            set
            {
                if (_UserGUID != value)
                {
                    OnUserGUIDChanging(value);
                    ReportPropertyChanging("UserGUID");
                    _UserGUID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserGUID");
                    OnUserGUIDChanged();
                }
            }
        }
        private global::System.Guid _UserGUID;
        partial void OnUserGUIDChanging(global::System.Guid value);
        partial void OnUserGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Permission
        {
            get
            {
                return _Permission;
            }
            set
            {
                OnPermissionChanging(value);
                ReportPropertyChanging("Permission");
                _Permission = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Permission");
                OnPermissionChanged();
            }
        }
        private global::System.Int64 _Permission;
        partial void OnPermissionChanging(global::System.Int64 value);
        partial void OnPermissionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_AccessPoint_AccessPoint_User_Join", "AccessPoint")]
        public AccessPoint AccessPoint
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessPoint>("MCMModel.FK_AccessPoint_AccessPoint_User_Join", "AccessPoint").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessPoint>("MCMModel.FK_AccessPoint_AccessPoint_User_Join", "AccessPoint").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccessPoint> AccessPointReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessPoint>("MCMModel.FK_AccessPoint_AccessPoint_User_Join", "AccessPoint");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AccessPoint>("MCMModel.FK_AccessPoint_AccessPoint_User_Join", "AccessPoint", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCMModel", Name="AccessProvider")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccessProvider : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccessProvider object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="destinationID">Initial value of the DestinationID property.</param>
        /// <param name="basePath">Initial value of the BasePath property.</param>
        /// <param name="stringFormat">Initial value of the StringFormat property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="token">Initial value of the Token property.</param>
        public static AccessProvider CreateAccessProvider(global::System.Int64 id, global::System.Int64 destinationID, global::System.String basePath, global::System.String stringFormat, global::System.DateTime dateCreated, global::System.String token)
        {
            AccessProvider accessProvider = new AccessProvider();
            accessProvider.ID = id;
            accessProvider.DestinationID = destinationID;
            accessProvider.BasePath = basePath;
            accessProvider.StringFormat = stringFormat;
            accessProvider.DateCreated = dateCreated;
            accessProvider.Token = token;
            return accessProvider;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DestinationID
        {
            get
            {
                return _DestinationID;
            }
            set
            {
                OnDestinationIDChanging(value);
                ReportPropertyChanging("DestinationID");
                _DestinationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DestinationID");
                OnDestinationIDChanged();
            }
        }
        private global::System.Int64 _DestinationID;
        partial void OnDestinationIDChanging(global::System.Int64 value);
        partial void OnDestinationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BasePath
        {
            get
            {
                return _BasePath;
            }
            set
            {
                OnBasePathChanging(value);
                ReportPropertyChanging("BasePath");
                _BasePath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BasePath");
                OnBasePathChanged();
            }
        }
        private global::System.String _BasePath;
        partial void OnBasePathChanging(global::System.String value);
        partial void OnBasePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StringFormat
        {
            get
            {
                return _StringFormat;
            }
            set
            {
                OnStringFormatChanging(value);
                ReportPropertyChanging("StringFormat");
                _StringFormat = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StringFormat");
                OnStringFormatChanged();
            }
        }
        private global::System.String _StringFormat;
        partial void OnStringFormatChanging(global::System.String value);
        partial void OnStringFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Token
        {
            get
            {
                return _Token;
            }
            set
            {
                OnTokenChanging(value);
                ReportPropertyChanging("Token");
                _Token = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Token");
                OnTokenChanged();
            }
        }
        private global::System.String _Token;
        partial void OnTokenChanging(global::System.String value);
        partial void OnTokenChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_Destination_ID_AccessProvider_DestinationID", "Destination")]
        public Destination Destination
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Destination>("MCMModel.FK_Destination_ID_AccessProvider_DestinationID", "Destination").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Destination>("MCMModel.FK_Destination_ID_AccessProvider_DestinationID", "Destination").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Destination> DestinationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Destination>("MCMModel.FK_Destination_ID_AccessProvider_DestinationID", "Destination");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Destination>("MCMModel.FK_Destination_ID_AccessProvider_DestinationID", "Destination", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCMModel", Name="Conversion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Conversion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Conversion object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="accessPointGUID">Initial value of the AccessPointGUID property.</param>
        /// <param name="formatCategoryID">Initial value of the FormatCategoryID property.</param>
        /// <param name="formatID">Initial value of the FormatID property.</param>
        /// <param name="destinationID">Initial value of the DestinationID property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static Conversion CreateConversion(global::System.Int64 id, global::System.Guid accessPointGUID, global::System.Int64 formatCategoryID, global::System.Int64 formatID, global::System.Int64 destinationID, global::System.DateTime dateCreated)
        {
            Conversion conversion = new Conversion();
            conversion.ID = id;
            conversion.AccessPointGUID = accessPointGUID;
            conversion.FormatCategoryID = formatCategoryID;
            conversion.FormatID = formatID;
            conversion.DestinationID = destinationID;
            conversion.DateCreated = dateCreated;
            return conversion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AccessPointGUID
        {
            get
            {
                return _AccessPointGUID;
            }
            set
            {
                OnAccessPointGUIDChanging(value);
                ReportPropertyChanging("AccessPointGUID");
                _AccessPointGUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccessPointGUID");
                OnAccessPointGUIDChanged();
            }
        }
        private global::System.Guid _AccessPointGUID;
        partial void OnAccessPointGUIDChanging(global::System.Guid value);
        partial void OnAccessPointGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FormatCategoryID
        {
            get
            {
                return _FormatCategoryID;
            }
            set
            {
                OnFormatCategoryIDChanging(value);
                ReportPropertyChanging("FormatCategoryID");
                _FormatCategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FormatCategoryID");
                OnFormatCategoryIDChanged();
            }
        }
        private global::System.Int64 _FormatCategoryID;
        partial void OnFormatCategoryIDChanging(global::System.Int64 value);
        partial void OnFormatCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FormatID
        {
            get
            {
                return _FormatID;
            }
            set
            {
                OnFormatIDChanging(value);
                ReportPropertyChanging("FormatID");
                _FormatID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FormatID");
                OnFormatIDChanged();
            }
        }
        private global::System.Int64 _FormatID;
        partial void OnFormatIDChanging(global::System.Int64 value);
        partial void OnFormatIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DestinationID
        {
            get
            {
                return _DestinationID;
            }
            set
            {
                OnDestinationIDChanging(value);
                ReportPropertyChanging("DestinationID");
                _DestinationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DestinationID");
                OnDestinationIDChanged();
            }
        }
        private global::System.Int64 _DestinationID;
        partial void OnDestinationIDChanging(global::System.Int64 value);
        partial void OnDestinationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_AccessPoint_GUID_Conversion_AccessPointGUID", "AccessPoint")]
        public AccessPoint AccessPoint
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessPoint>("MCMModel.FK_AccessPoint_GUID_Conversion_AccessPointGUID", "AccessPoint").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessPoint>("MCMModel.FK_AccessPoint_GUID_Conversion_AccessPointGUID", "AccessPoint").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccessPoint> AccessPointReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessPoint>("MCMModel.FK_AccessPoint_GUID_Conversion_AccessPointGUID", "AccessPoint");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AccessPoint>("MCMModel.FK_AccessPoint_GUID_Conversion_AccessPointGUID", "AccessPoint", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_Destination_ID_Conversion_DestinationID", "Destination")]
        public Destination Destination
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Destination>("MCMModel.FK_Destination_ID_Conversion_DestinationID", "Destination").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Destination>("MCMModel.FK_Destination_ID_Conversion_DestinationID", "Destination").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Destination> DestinationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Destination>("MCMModel.FK_Destination_ID_Conversion_DestinationID", "Destination");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Destination>("MCMModel.FK_Destination_ID_Conversion_DestinationID", "Destination", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_Format_ID_Conversion_FormatID", "Format")]
        public Format Format
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Format>("MCMModel.FK_Format_ID_Conversion_FormatID", "Format").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Format>("MCMModel.FK_Format_ID_Conversion_FormatID", "Format").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Format> FormatReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Format>("MCMModel.FK_Format_ID_Conversion_FormatID", "Format");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Format>("MCMModel.FK_Format_ID_Conversion_FormatID", "Format", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_FormatCategory_ID_Conversion_FormatCategoryID", "FormatCategory")]
        public FormatCategory FormatCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormatCategory>("MCMModel.FK_FormatCategory_ID_Conversion_FormatCategoryID", "FormatCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormatCategory>("MCMModel.FK_FormatCategory_ID_Conversion_FormatCategoryID", "FormatCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FormatCategory> FormatCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormatCategory>("MCMModel.FK_FormatCategory_ID_Conversion_FormatCategoryID", "FormatCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FormatCategory>("MCMModel.FK_FormatCategory_ID_Conversion_FormatCategoryID", "FormatCategory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCMModel", Name="Destination")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Destination : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Destination object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="subscriptionGUID">Initial value of the SubscriptionGUID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static Destination CreateDestination(global::System.Int64 id, global::System.Guid subscriptionGUID, global::System.String name, global::System.DateTime dateCreated)
        {
            Destination destination = new Destination();
            destination.ID = id;
            destination.SubscriptionGUID = subscriptionGUID;
            destination.Name = name;
            destination.DateCreated = dateCreated;
            return destination;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SubscriptionGUID
        {
            get
            {
                return _SubscriptionGUID;
            }
            set
            {
                OnSubscriptionGUIDChanging(value);
                ReportPropertyChanging("SubscriptionGUID");
                _SubscriptionGUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubscriptionGUID");
                OnSubscriptionGUIDChanged();
            }
        }
        private global::System.Guid _SubscriptionGUID;
        partial void OnSubscriptionGUIDChanging(global::System.Guid value);
        partial void OnSubscriptionGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_Destination_ID_AccessProvider_DestinationID", "AccessProvider")]
        public EntityCollection<AccessProvider> AccessProvider
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccessProvider>("MCMModel.FK_Destination_ID_AccessProvider_DestinationID", "AccessProvider");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccessProvider>("MCMModel.FK_Destination_ID_AccessProvider_DestinationID", "AccessProvider", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_Destination_ID_Conversion_DestinationID", "Conversion")]
        public EntityCollection<Conversion> Conversion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Conversion>("MCMModel.FK_Destination_ID_Conversion_DestinationID", "Conversion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Conversion>("MCMModel.FK_Destination_ID_Conversion_DestinationID", "Conversion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_Destination_ID_File_DestinationID", "File")]
        public EntityCollection<File> File
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<File>("MCMModel.FK_Destination_ID_File_DestinationID", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<File>("MCMModel.FK_Destination_ID_File_DestinationID", "File", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCMModel", Name="DestinationInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DestinationInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DestinationInfo object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="subscriptionGUID">Initial value of the SubscriptionGUID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="basePath">Initial value of the BasePath property.</param>
        /// <param name="stringFormat">Initial value of the StringFormat property.</param>
        /// <param name="token">Initial value of the Token property.</param>
        public static DestinationInfo CreateDestinationInfo(global::System.Int64 id, global::System.Guid subscriptionGUID, global::System.String name, global::System.DateTime dateCreated, global::System.String basePath, global::System.String stringFormat, global::System.String token)
        {
            DestinationInfo destinationInfo = new DestinationInfo();
            destinationInfo.ID = id;
            destinationInfo.SubscriptionGUID = subscriptionGUID;
            destinationInfo.Name = name;
            destinationInfo.DateCreated = dateCreated;
            destinationInfo.BasePath = basePath;
            destinationInfo.StringFormat = stringFormat;
            destinationInfo.Token = token;
            return destinationInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SubscriptionGUID
        {
            get
            {
                return _SubscriptionGUID;
            }
            set
            {
                if (_SubscriptionGUID != value)
                {
                    OnSubscriptionGUIDChanging(value);
                    ReportPropertyChanging("SubscriptionGUID");
                    _SubscriptionGUID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SubscriptionGUID");
                    OnSubscriptionGUIDChanged();
                }
            }
        }
        private global::System.Guid _SubscriptionGUID;
        partial void OnSubscriptionGUIDChanging(global::System.Guid value);
        partial void OnSubscriptionGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                if (_DateCreated != value)
                {
                    OnDateCreatedChanging(value);
                    ReportPropertyChanging("DateCreated");
                    _DateCreated = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DateCreated");
                    OnDateCreatedChanged();
                }
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BasePath
        {
            get
            {
                return _BasePath;
            }
            set
            {
                if (_BasePath != value)
                {
                    OnBasePathChanging(value);
                    ReportPropertyChanging("BasePath");
                    _BasePath = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("BasePath");
                    OnBasePathChanged();
                }
            }
        }
        private global::System.String _BasePath;
        partial void OnBasePathChanging(global::System.String value);
        partial void OnBasePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StringFormat
        {
            get
            {
                return _StringFormat;
            }
            set
            {
                if (_StringFormat != value)
                {
                    OnStringFormatChanging(value);
                    ReportPropertyChanging("StringFormat");
                    _StringFormat = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("StringFormat");
                    OnStringFormatChanged();
                }
            }
        }
        private global::System.String _StringFormat;
        partial void OnStringFormatChanging(global::System.String value);
        partial void OnStringFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Token
        {
            get
            {
                return _Token;
            }
            set
            {
                if (_Token != value)
                {
                    OnTokenChanging(value);
                    ReportPropertyChanging("Token");
                    _Token = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Token");
                    OnTokenChanged();
                }
            }
        }
        private global::System.String _Token;
        partial void OnTokenChanging(global::System.String value);
        partial void OnTokenChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCMModel", Name="File")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class File : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new File object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="objectGUID">Initial value of the ObjectGUID property.</param>
        /// <param name="formatID">Initial value of the FormatID property.</param>
        /// <param name="destinationID">Initial value of the DestinationID property.</param>
        /// <param name="fileName">Initial value of the FileName property.</param>
        /// <param name="originalFileName">Initial value of the OriginalFileName property.</param>
        /// <param name="folderPath">Initial value of the FolderPath property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static File CreateFile(global::System.Int64 id, global::System.Guid objectGUID, global::System.Int64 formatID, global::System.Int64 destinationID, global::System.String fileName, global::System.String originalFileName, global::System.String folderPath, global::System.DateTime dateCreated)
        {
            File file = new File();
            file.ID = id;
            file.ObjectGUID = objectGUID;
            file.FormatID = formatID;
            file.DestinationID = destinationID;
            file.FileName = fileName;
            file.OriginalFileName = originalFileName;
            file.FolderPath = folderPath;
            file.DateCreated = dateCreated;
            return file;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ObjectGUID
        {
            get
            {
                return _ObjectGUID;
            }
            set
            {
                OnObjectGUIDChanging(value);
                ReportPropertyChanging("ObjectGUID");
                _ObjectGUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ObjectGUID");
                OnObjectGUIDChanged();
            }
        }
        private global::System.Guid _ObjectGUID;
        partial void OnObjectGUIDChanging(global::System.Guid value);
        partial void OnObjectGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private Nullable<global::System.Int64> _ParentID;
        partial void OnParentIDChanging(Nullable<global::System.Int64> value);
        partial void OnParentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FormatID
        {
            get
            {
                return _FormatID;
            }
            set
            {
                OnFormatIDChanging(value);
                ReportPropertyChanging("FormatID");
                _FormatID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FormatID");
                OnFormatIDChanged();
            }
        }
        private global::System.Int64 _FormatID;
        partial void OnFormatIDChanging(global::System.Int64 value);
        partial void OnFormatIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DestinationID
        {
            get
            {
                return _DestinationID;
            }
            set
            {
                OnDestinationIDChanging(value);
                ReportPropertyChanging("DestinationID");
                _DestinationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DestinationID");
                OnDestinationIDChanged();
            }
        }
        private global::System.Int64 _DestinationID;
        partial void OnDestinationIDChanging(global::System.Int64 value);
        partial void OnDestinationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OriginalFileName
        {
            get
            {
                return _OriginalFileName;
            }
            set
            {
                OnOriginalFileNameChanging(value);
                ReportPropertyChanging("OriginalFileName");
                _OriginalFileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OriginalFileName");
                OnOriginalFileNameChanged();
            }
        }
        private global::System.String _OriginalFileName;
        partial void OnOriginalFileNameChanging(global::System.String value);
        partial void OnOriginalFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FolderPath
        {
            get
            {
                return _FolderPath;
            }
            set
            {
                OnFolderPathChanging(value);
                ReportPropertyChanging("FolderPath");
                _FolderPath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FolderPath");
                OnFolderPathChanged();
            }
        }
        private global::System.String _FolderPath;
        partial void OnFolderPathChanging(global::System.String value);
        partial void OnFolderPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_Destination_ID_File_DestinationID", "Destination")]
        public Destination Destination
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Destination>("MCMModel.FK_Destination_ID_File_DestinationID", "Destination").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Destination>("MCMModel.FK_Destination_ID_File_DestinationID", "Destination").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Destination> DestinationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Destination>("MCMModel.FK_Destination_ID_File_DestinationID", "Destination");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Destination>("MCMModel.FK_Destination_ID_File_DestinationID", "Destination", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_File_ID_File_ParentID", "File1")]
        public EntityCollection<File> File1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<File>("MCMModel.FK_File_ID_File_ParentID", "File1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<File>("MCMModel.FK_File_ID_File_ParentID", "File1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_File_ID_File_ParentID", "File")]
        public File File2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("MCMModel.FK_File_ID_File_ParentID", "File").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("MCMModel.FK_File_ID_File_ParentID", "File").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<File> File2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("MCMModel.FK_File_ID_File_ParentID", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<File>("MCMModel.FK_File_ID_File_ParentID", "File", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_Format_ID_File_FormatID", "Format")]
        public Format Format
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Format>("MCMModel.FK_Format_ID_File_FormatID", "Format").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Format>("MCMModel.FK_Format_ID_File_FormatID", "Format").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Format> FormatReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Format>("MCMModel.FK_Format_ID_File_FormatID", "Format");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Format>("MCMModel.FK_Format_ID_File_FormatID", "Format", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCMModel", Name="FileInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FileInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FileInfo object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="objectGUID">Initial value of the ObjectGUID property.</param>
        /// <param name="filename">Initial value of the Filename property.</param>
        /// <param name="originalFilename">Initial value of the OriginalFilename property.</param>
        /// <param name="token">Initial value of the Token property.</param>
        /// <param name="formatID">Initial value of the FormatID property.</param>
        /// <param name="format">Initial value of the Format property.</param>
        /// <param name="formatCategory">Initial value of the FormatCategory property.</param>
        /// <param name="formatType">Initial value of the FormatType property.</param>
        public static FileInfo CreateFileInfo(global::System.Int64 id, global::System.Guid objectGUID, global::System.String filename, global::System.String originalFilename, global::System.String token, global::System.Int64 formatID, global::System.String format, global::System.String formatCategory, global::System.String formatType)
        {
            FileInfo fileInfo = new FileInfo();
            fileInfo.ID = id;
            fileInfo.ObjectGUID = objectGUID;
            fileInfo.Filename = filename;
            fileInfo.OriginalFilename = originalFilename;
            fileInfo.Token = token;
            fileInfo.FormatID = formatID;
            fileInfo.Format = format;
            fileInfo.FormatCategory = formatCategory;
            fileInfo.FormatType = formatType;
            return fileInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private Nullable<global::System.Int64> _ParentID;
        partial void OnParentIDChanging(Nullable<global::System.Int64> value);
        partial void OnParentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ObjectGUID
        {
            get
            {
                return _ObjectGUID;
            }
            set
            {
                if (_ObjectGUID != value)
                {
                    OnObjectGUIDChanging(value);
                    ReportPropertyChanging("ObjectGUID");
                    _ObjectGUID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectGUID");
                    OnObjectGUIDChanged();
                }
            }
        }
        private global::System.Guid _ObjectGUID;
        partial void OnObjectGUIDChanging(global::System.Guid value);
        partial void OnObjectGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Filename
        {
            get
            {
                return _Filename;
            }
            set
            {
                if (_Filename != value)
                {
                    OnFilenameChanging(value);
                    ReportPropertyChanging("Filename");
                    _Filename = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Filename");
                    OnFilenameChanged();
                }
            }
        }
        private global::System.String _Filename;
        partial void OnFilenameChanging(global::System.String value);
        partial void OnFilenameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OriginalFilename
        {
            get
            {
                return _OriginalFilename;
            }
            set
            {
                if (_OriginalFilename != value)
                {
                    OnOriginalFilenameChanging(value);
                    ReportPropertyChanging("OriginalFilename");
                    _OriginalFilename = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("OriginalFilename");
                    OnOriginalFilenameChanged();
                }
            }
        }
        private global::System.String _OriginalFilename;
        partial void OnOriginalFilenameChanging(global::System.String value);
        partial void OnOriginalFilenameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Token
        {
            get
            {
                return _Token;
            }
            set
            {
                if (_Token != value)
                {
                    OnTokenChanging(value);
                    ReportPropertyChanging("Token");
                    _Token = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Token");
                    OnTokenChanged();
                }
            }
        }
        private global::System.String _Token;
        partial void OnTokenChanging(global::System.String value);
        partial void OnTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String URL
        {
            get
            {
                return _URL;
            }
            set
            {
                OnURLChanging(value);
                ReportPropertyChanging("URL");
                _URL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("URL");
                OnURLChanged();
            }
        }
        private global::System.String _URL;
        partial void OnURLChanging(global::System.String value);
        partial void OnURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FormatID
        {
            get
            {
                return _FormatID;
            }
            set
            {
                if (_FormatID != value)
                {
                    OnFormatIDChanging(value);
                    ReportPropertyChanging("FormatID");
                    _FormatID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FormatID");
                    OnFormatIDChanged();
                }
            }
        }
        private global::System.Int64 _FormatID;
        partial void OnFormatIDChanging(global::System.Int64 value);
        partial void OnFormatIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Format
        {
            get
            {
                return _Format;
            }
            set
            {
                if (_Format != value)
                {
                    OnFormatChanging(value);
                    ReportPropertyChanging("Format");
                    _Format = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Format");
                    OnFormatChanged();
                }
            }
        }
        private global::System.String _Format;
        partial void OnFormatChanging(global::System.String value);
        partial void OnFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FormatCategory
        {
            get
            {
                return _FormatCategory;
            }
            set
            {
                if (_FormatCategory != value)
                {
                    OnFormatCategoryChanging(value);
                    ReportPropertyChanging("FormatCategory");
                    _FormatCategory = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FormatCategory");
                    OnFormatCategoryChanged();
                }
            }
        }
        private global::System.String _FormatCategory;
        partial void OnFormatCategoryChanging(global::System.String value);
        partial void OnFormatCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FormatType
        {
            get
            {
                return _FormatType;
            }
            set
            {
                if (_FormatType != value)
                {
                    OnFormatTypeChanging(value);
                    ReportPropertyChanging("FormatType");
                    _FormatType = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FormatType");
                    OnFormatTypeChanged();
                }
            }
        }
        private global::System.String _FormatType;
        partial void OnFormatTypeChanging(global::System.String value);
        partial void OnFormatTypeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCMModel", Name="Folder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Folder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Folder object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="folderTypeID">Initial value of the FolderTypeID property.</param>
        /// <param name="subscriptionGUID">Initial value of the SubscriptionGUID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static Folder CreateFolder(global::System.Int64 id, global::System.Int64 folderTypeID, global::System.Guid subscriptionGUID, global::System.String name, global::System.DateTime dateCreated)
        {
            Folder folder = new Folder();
            folder.ID = id;
            folder.FolderTypeID = folderTypeID;
            folder.SubscriptionGUID = subscriptionGUID;
            folder.Name = name;
            folder.DateCreated = dateCreated;
            return folder;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private Nullable<global::System.Int64> _ParentID;
        partial void OnParentIDChanging(Nullable<global::System.Int64> value);
        partial void OnParentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FolderTypeID
        {
            get
            {
                return _FolderTypeID;
            }
            set
            {
                OnFolderTypeIDChanging(value);
                ReportPropertyChanging("FolderTypeID");
                _FolderTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FolderTypeID");
                OnFolderTypeIDChanged();
            }
        }
        private global::System.Int64 _FolderTypeID;
        partial void OnFolderTypeIDChanging(global::System.Int64 value);
        partial void OnFolderTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SubscriptionGUID
        {
            get
            {
                return _SubscriptionGUID;
            }
            set
            {
                OnSubscriptionGUIDChanging(value);
                ReportPropertyChanging("SubscriptionGUID");
                _SubscriptionGUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubscriptionGUID");
                OnSubscriptionGUIDChanged();
            }
        }
        private global::System.Guid _SubscriptionGUID;
        partial void OnSubscriptionGUIDChanging(global::System.Guid value);
        partial void OnSubscriptionGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_Folder_ID_Folder_Group_Join_FolderID", "Folder_Group_Join")]
        public EntityCollection<Folder_Group_Join> Folder_Group_Join
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Folder_Group_Join>("MCMModel.FK_Folder_ID_Folder_Group_Join_FolderID", "Folder_Group_Join");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Folder_Group_Join>("MCMModel.FK_Folder_ID_Folder_Group_Join_FolderID", "Folder_Group_Join", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_Folder_ID_Folder_ParentID", "Folder1")]
        public EntityCollection<Folder> Folder1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Folder>("MCMModel.FK_Folder_ID_Folder_ParentID", "Folder1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Folder>("MCMModel.FK_Folder_ID_Folder_ParentID", "Folder1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_Folder_ID_Folder_ParentID", "Folder")]
        public Folder Folder2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("MCMModel.FK_Folder_ID_Folder_ParentID", "Folder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("MCMModel.FK_Folder_ID_Folder_ParentID", "Folder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Folder> Folder2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("MCMModel.FK_Folder_ID_Folder_ParentID", "Folder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Folder>("MCMModel.FK_Folder_ID_Folder_ParentID", "Folder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_Folder_ID_Folder_User_Join_FolderID", "Folder_User_Join")]
        public EntityCollection<Folder_User_Join> Folder_User_Join
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Folder_User_Join>("MCMModel.FK_Folder_ID_Folder_User_Join_FolderID", "Folder_User_Join");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Folder_User_Join>("MCMModel.FK_Folder_ID_Folder_User_Join_FolderID", "Folder_User_Join", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_Folder_ID_Object_Folder_Join_FolderID", "Object_Folder_Join")]
        public EntityCollection<Object_Folder_Join> Object_Folder_Join
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Object_Folder_Join>("MCMModel.FK_Folder_ID_Object_Folder_Join_FolderID", "Object_Folder_Join");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Object_Folder_Join>("MCMModel.FK_Folder_ID_Object_Folder_Join_FolderID", "Object_Folder_Join", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_FolderType_ID_Folder_FolderTypeID", "FolderType")]
        public FolderType FolderType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FolderType>("MCMModel.FK_FolderType_ID_Folder_FolderTypeID", "FolderType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FolderType>("MCMModel.FK_FolderType_ID_Folder_FolderTypeID", "FolderType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FolderType> FolderTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FolderType>("MCMModel.FK_FolderType_ID_Folder_FolderTypeID", "FolderType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FolderType>("MCMModel.FK_FolderType_ID_Folder_FolderTypeID", "FolderType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCMModel", Name="Folder_Group_Join")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Folder_Group_Join : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Folder_Group_Join object.
        /// </summary>
        /// <param name="folderID">Initial value of the FolderID property.</param>
        /// <param name="groupGUID">Initial value of the GroupGUID property.</param>
        /// <param name="permission">Initial value of the Permission property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static Folder_Group_Join CreateFolder_Group_Join(global::System.Int64 folderID, global::System.Guid groupGUID, global::System.Int64 permission, global::System.DateTime dateCreated)
        {
            Folder_Group_Join folder_Group_Join = new Folder_Group_Join();
            folder_Group_Join.FolderID = folderID;
            folder_Group_Join.GroupGUID = groupGUID;
            folder_Group_Join.Permission = permission;
            folder_Group_Join.DateCreated = dateCreated;
            return folder_Group_Join;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FolderID
        {
            get
            {
                return _FolderID;
            }
            set
            {
                if (_FolderID != value)
                {
                    OnFolderIDChanging(value);
                    ReportPropertyChanging("FolderID");
                    _FolderID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FolderID");
                    OnFolderIDChanged();
                }
            }
        }
        private global::System.Int64 _FolderID;
        partial void OnFolderIDChanging(global::System.Int64 value);
        partial void OnFolderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GroupGUID
        {
            get
            {
                return _GroupGUID;
            }
            set
            {
                if (_GroupGUID != value)
                {
                    OnGroupGUIDChanging(value);
                    ReportPropertyChanging("GroupGUID");
                    _GroupGUID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GroupGUID");
                    OnGroupGUIDChanged();
                }
            }
        }
        private global::System.Guid _GroupGUID;
        partial void OnGroupGUIDChanging(global::System.Guid value);
        partial void OnGroupGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Permission
        {
            get
            {
                return _Permission;
            }
            set
            {
                OnPermissionChanging(value);
                ReportPropertyChanging("Permission");
                _Permission = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Permission");
                OnPermissionChanged();
            }
        }
        private global::System.Int64 _Permission;
        partial void OnPermissionChanging(global::System.Int64 value);
        partial void OnPermissionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_Folder_ID_Folder_Group_Join_FolderID", "Folder")]
        public Folder Folder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("MCMModel.FK_Folder_ID_Folder_Group_Join_FolderID", "Folder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("MCMModel.FK_Folder_ID_Folder_Group_Join_FolderID", "Folder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Folder> FolderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("MCMModel.FK_Folder_ID_Folder_Group_Join_FolderID", "Folder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Folder>("MCMModel.FK_Folder_ID_Folder_Group_Join_FolderID", "Folder", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCMModel", Name="Folder_User_Join")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Folder_User_Join : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Folder_User_Join object.
        /// </summary>
        /// <param name="folderID">Initial value of the FolderID property.</param>
        /// <param name="userGUID">Initial value of the UserGUID property.</param>
        /// <param name="permission">Initial value of the Permission property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static Folder_User_Join CreateFolder_User_Join(global::System.Int64 folderID, global::System.Guid userGUID, global::System.Int64 permission, global::System.DateTime dateCreated)
        {
            Folder_User_Join folder_User_Join = new Folder_User_Join();
            folder_User_Join.FolderID = folderID;
            folder_User_Join.UserGUID = userGUID;
            folder_User_Join.Permission = permission;
            folder_User_Join.DateCreated = dateCreated;
            return folder_User_Join;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FolderID
        {
            get
            {
                return _FolderID;
            }
            set
            {
                if (_FolderID != value)
                {
                    OnFolderIDChanging(value);
                    ReportPropertyChanging("FolderID");
                    _FolderID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FolderID");
                    OnFolderIDChanged();
                }
            }
        }
        private global::System.Int64 _FolderID;
        partial void OnFolderIDChanging(global::System.Int64 value);
        partial void OnFolderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserGUID
        {
            get
            {
                return _UserGUID;
            }
            set
            {
                if (_UserGUID != value)
                {
                    OnUserGUIDChanging(value);
                    ReportPropertyChanging("UserGUID");
                    _UserGUID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserGUID");
                    OnUserGUIDChanged();
                }
            }
        }
        private global::System.Guid _UserGUID;
        partial void OnUserGUIDChanging(global::System.Guid value);
        partial void OnUserGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Permission
        {
            get
            {
                return _Permission;
            }
            set
            {
                OnPermissionChanging(value);
                ReportPropertyChanging("Permission");
                _Permission = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Permission");
                OnPermissionChanged();
            }
        }
        private global::System.Int64 _Permission;
        partial void OnPermissionChanging(global::System.Int64 value);
        partial void OnPermissionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_Folder_ID_Folder_User_Join_FolderID", "Folder")]
        public Folder Folder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("MCMModel.FK_Folder_ID_Folder_User_Join_FolderID", "Folder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("MCMModel.FK_Folder_ID_Folder_User_Join_FolderID", "Folder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Folder> FolderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("MCMModel.FK_Folder_ID_Folder_User_Join_FolderID", "Folder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Folder>("MCMModel.FK_Folder_ID_Folder_User_Join_FolderID", "Folder", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCMModel", Name="FolderInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FolderInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FolderInfo object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="folderTypeID">Initial value of the FolderTypeID property.</param>
        /// <param name="subscriptionGUID">Initial value of the SubscriptionGUID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static FolderInfo CreateFolderInfo(global::System.Int64 id, global::System.Int64 folderTypeID, global::System.Guid subscriptionGUID, global::System.String name, global::System.DateTime dateCreated)
        {
            FolderInfo folderInfo = new FolderInfo();
            folderInfo.ID = id;
            folderInfo.FolderTypeID = folderTypeID;
            folderInfo.SubscriptionGUID = subscriptionGUID;
            folderInfo.Name = name;
            folderInfo.DateCreated = dateCreated;
            return folderInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private Nullable<global::System.Int64> _ParentID;
        partial void OnParentIDChanging(Nullable<global::System.Int64> value);
        partial void OnParentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FolderTypeID
        {
            get
            {
                return _FolderTypeID;
            }
            set
            {
                if (_FolderTypeID != value)
                {
                    OnFolderTypeIDChanging(value);
                    ReportPropertyChanging("FolderTypeID");
                    _FolderTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FolderTypeID");
                    OnFolderTypeIDChanged();
                }
            }
        }
        private global::System.Int64 _FolderTypeID;
        partial void OnFolderTypeIDChanging(global::System.Int64 value);
        partial void OnFolderTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SubscriptionGUID
        {
            get
            {
                return _SubscriptionGUID;
            }
            set
            {
                if (_SubscriptionGUID != value)
                {
                    OnSubscriptionGUIDChanging(value);
                    ReportPropertyChanging("SubscriptionGUID");
                    _SubscriptionGUID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SubscriptionGUID");
                    OnSubscriptionGUIDChanged();
                }
            }
        }
        private global::System.Guid _SubscriptionGUID;
        partial void OnSubscriptionGUIDChanging(global::System.Guid value);
        partial void OnSubscriptionGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                if (_DateCreated != value)
                {
                    OnDateCreatedChanging(value);
                    ReportPropertyChanging("DateCreated");
                    _DateCreated = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DateCreated");
                    OnDateCreatedChanged();
                }
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> NumberOfSubFolders
        {
            get
            {
                return _NumberOfSubFolders;
            }
            set
            {
                OnNumberOfSubFoldersChanging(value);
                ReportPropertyChanging("NumberOfSubFolders");
                _NumberOfSubFolders = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfSubFolders");
                OnNumberOfSubFoldersChanged();
            }
        }
        private Nullable<global::System.Int64> _NumberOfSubFolders;
        partial void OnNumberOfSubFoldersChanging(Nullable<global::System.Int64> value);
        partial void OnNumberOfSubFoldersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> NumberOfObjects
        {
            get
            {
                return _NumberOfObjects;
            }
            set
            {
                OnNumberOfObjectsChanging(value);
                ReportPropertyChanging("NumberOfObjects");
                _NumberOfObjects = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfObjects");
                OnNumberOfObjectsChanged();
            }
        }
        private Nullable<global::System.Int64> _NumberOfObjects;
        partial void OnNumberOfObjectsChanging(Nullable<global::System.Int64> value);
        partial void OnNumberOfObjectsChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCMModel", Name="FolderType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FolderType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FolderType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static FolderType CreateFolderType(global::System.Int64 id, global::System.String name, global::System.DateTime dateCreated)
        {
            FolderType folderType = new FolderType();
            folderType.ID = id;
            folderType.Name = name;
            folderType.DateCreated = dateCreated;
            return folderType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_FolderType_ID_Folder_FolderTypeID", "Folder")]
        public EntityCollection<Folder> Folder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Folder>("MCMModel.FK_FolderType_ID_Folder_FolderTypeID", "Folder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Folder>("MCMModel.FK_FolderType_ID_Folder_FolderTypeID", "Folder", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCMModel", Name="Format")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Format : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Format object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="formatCategoryID">Initial value of the FormatCategoryID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="mimeType">Initial value of the MimeType property.</param>
        public static Format CreateFormat(global::System.Int64 id, global::System.Int64 formatCategoryID, global::System.String name, global::System.String mimeType)
        {
            Format format = new Format();
            format.ID = id;
            format.FormatCategoryID = formatCategoryID;
            format.Name = name;
            format.MimeType = mimeType;
            return format;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FormatCategoryID
        {
            get
            {
                return _FormatCategoryID;
            }
            set
            {
                OnFormatCategoryIDChanging(value);
                ReportPropertyChanging("FormatCategoryID");
                _FormatCategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FormatCategoryID");
                OnFormatCategoryIDChanged();
            }
        }
        private global::System.Int64 _FormatCategoryID;
        partial void OnFormatCategoryIDChanging(global::System.Int64 value);
        partial void OnFormatCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FormatXML
        {
            get
            {
                return _FormatXML;
            }
            set
            {
                OnFormatXMLChanging(value);
                ReportPropertyChanging("FormatXML");
                _FormatXML = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FormatXML");
                OnFormatXMLChanged();
            }
        }
        private global::System.String _FormatXML;
        partial void OnFormatXMLChanging(global::System.String value);
        partial void OnFormatXMLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MimeType
        {
            get
            {
                return _MimeType;
            }
            set
            {
                OnMimeTypeChanging(value);
                ReportPropertyChanging("MimeType");
                _MimeType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MimeType");
                OnMimeTypeChanged();
            }
        }
        private global::System.String _MimeType;
        partial void OnMimeTypeChanging(global::System.String value);
        partial void OnMimeTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_Format_ID_Conversion_FormatID", "Conversion")]
        public EntityCollection<Conversion> Conversion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Conversion>("MCMModel.FK_Format_ID_Conversion_FormatID", "Conversion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Conversion>("MCMModel.FK_Format_ID_Conversion_FormatID", "Conversion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_Format_ID_File_FormatID", "File")]
        public EntityCollection<File> File
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<File>("MCMModel.FK_Format_ID_File_FormatID", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<File>("MCMModel.FK_Format_ID_File_FormatID", "File", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_FormatCategory_ID_Format_FormatCategoryID", "FormatCategory")]
        public FormatCategory FormatCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormatCategory>("MCMModel.FK_FormatCategory_ID_Format_FormatCategoryID", "FormatCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormatCategory>("MCMModel.FK_FormatCategory_ID_Format_FormatCategoryID", "FormatCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FormatCategory> FormatCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormatCategory>("MCMModel.FK_FormatCategory_ID_Format_FormatCategoryID", "FormatCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FormatCategory>("MCMModel.FK_FormatCategory_ID_Format_FormatCategoryID", "FormatCategory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCMModel", Name="FormatCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FormatCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FormatCategory object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="formatTypeID">Initial value of the FormatTypeID property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static FormatCategory CreateFormatCategory(global::System.Int64 id, global::System.Int64 formatTypeID, global::System.String value)
        {
            FormatCategory formatCategory = new FormatCategory();
            formatCategory.ID = id;
            formatCategory.FormatTypeID = formatTypeID;
            formatCategory.Value = value;
            return formatCategory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FormatTypeID
        {
            get
            {
                return _FormatTypeID;
            }
            set
            {
                OnFormatTypeIDChanging(value);
                ReportPropertyChanging("FormatTypeID");
                _FormatTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FormatTypeID");
                OnFormatTypeIDChanged();
            }
        }
        private global::System.Int64 _FormatTypeID;
        partial void OnFormatTypeIDChanging(global::System.Int64 value);
        partial void OnFormatTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_FormatCategory_ID_Conversion_FormatCategoryID", "Conversion")]
        public EntityCollection<Conversion> Conversion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Conversion>("MCMModel.FK_FormatCategory_ID_Conversion_FormatCategoryID", "Conversion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Conversion>("MCMModel.FK_FormatCategory_ID_Conversion_FormatCategoryID", "Conversion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_FormatCategory_ID_Format_FormatCategoryID", "Format")]
        public EntityCollection<Format> Format
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Format>("MCMModel.FK_FormatCategory_ID_Format_FormatCategoryID", "Format");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Format>("MCMModel.FK_FormatCategory_ID_Format_FormatCategoryID", "Format", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_FormatType_ID_FormatCategory_FormatTypeID", "FormatType")]
        public FormatType FormatType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormatType>("MCMModel.FK_FormatType_ID_FormatCategory_FormatTypeID", "FormatType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormatType>("MCMModel.FK_FormatType_ID_FormatCategory_FormatTypeID", "FormatType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FormatType> FormatTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormatType>("MCMModel.FK_FormatType_ID_FormatCategory_FormatTypeID", "FormatType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FormatType>("MCMModel.FK_FormatType_ID_FormatCategory_FormatTypeID", "FormatType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCMModel", Name="FormatType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FormatType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FormatType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static FormatType CreateFormatType(global::System.Int64 id, global::System.String value)
        {
            FormatType formatType = new FormatType();
            formatType.ID = id;
            formatType.Value = value;
            return formatType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_FormatType_ID_FormatCategory_FormatTypeID", "FormatCategory")]
        public EntityCollection<FormatCategory> FormatCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FormatCategory>("MCMModel.FK_FormatType_ID_FormatCategory_FormatTypeID", "FormatCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FormatCategory>("MCMModel.FK_FormatType_ID_FormatCategory_FormatTypeID", "FormatCategory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCMModel", Name="Language")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Language : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Language object.
        /// </summary>
        /// <param name="languageCode">Initial value of the LanguageCode property.</param>
        public static Language CreateLanguage(global::System.String languageCode)
        {
            Language language = new Language();
            language.LanguageCode = languageCode;
            return language;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LanguageCode
        {
            get
            {
                return _LanguageCode;
            }
            set
            {
                if (_LanguageCode != value)
                {
                    OnLanguageCodeChanging(value);
                    ReportPropertyChanging("LanguageCode");
                    _LanguageCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LanguageCode");
                    OnLanguageCodeChanged();
                }
            }
        }
        private global::System.String _LanguageCode;
        partial void OnLanguageCodeChanging(global::System.String value);
        partial void OnLanguageCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_Language_LanguageCode_Metadata_LanguageCode", "Metadata")]
        public EntityCollection<Metadata> Metadata
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Metadata>("MCMModel.FK_Language_LanguageCode_Metadata_LanguageCode", "Metadata");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Metadata>("MCMModel.FK_Language_LanguageCode_Metadata_LanguageCode", "Metadata", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCMModel", Name="Metadata")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Metadata : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Metadata object.
        /// </summary>
        /// <param name="gUID">Initial value of the GUID property.</param>
        /// <param name="objectGUID">Initial value of the ObjectGUID property.</param>
        /// <param name="metadataSchemaUGID">Initial value of the MetadataSchemaUGID property.</param>
        /// <param name="metadataXML">Initial value of the MetadataXML property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="editingUserGUID">Initial value of the EditingUserGUID property.</param>
        public static Metadata CreateMetadata(global::System.Guid gUID, global::System.Guid objectGUID, global::System.Guid metadataSchemaUGID, global::System.String metadataXML, global::System.DateTime dateCreated, global::System.Guid editingUserGUID)
        {
            Metadata metadata = new Metadata();
            metadata.GUID = gUID;
            metadata.ObjectGUID = objectGUID;
            metadata.MetadataSchemaUGID = metadataSchemaUGID;
            metadata.MetadataXML = metadataXML;
            metadata.DateCreated = dateCreated;
            metadata.EditingUserGUID = editingUserGUID;
            return metadata;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GUID
        {
            get
            {
                return _GUID;
            }
            set
            {
                if (_GUID != value)
                {
                    OnGUIDChanging(value);
                    ReportPropertyChanging("GUID");
                    _GUID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GUID");
                    OnGUIDChanged();
                }
            }
        }
        private global::System.Guid _GUID;
        partial void OnGUIDChanging(global::System.Guid value);
        partial void OnGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ObjectGUID
        {
            get
            {
                return _ObjectGUID;
            }
            set
            {
                OnObjectGUIDChanging(value);
                ReportPropertyChanging("ObjectGUID");
                _ObjectGUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ObjectGUID");
                OnObjectGUIDChanged();
            }
        }
        private global::System.Guid _ObjectGUID;
        partial void OnObjectGUIDChanging(global::System.Guid value);
        partial void OnObjectGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LanguageCode
        {
            get
            {
                return _LanguageCode;
            }
            set
            {
                OnLanguageCodeChanging(value);
                ReportPropertyChanging("LanguageCode");
                _LanguageCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LanguageCode");
                OnLanguageCodeChanged();
            }
        }
        private global::System.String _LanguageCode;
        partial void OnLanguageCodeChanging(global::System.String value);
        partial void OnLanguageCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MetadataSchemaUGID
        {
            get
            {
                return _MetadataSchemaUGID;
            }
            set
            {
                OnMetadataSchemaUGIDChanging(value);
                ReportPropertyChanging("MetadataSchemaUGID");
                _MetadataSchemaUGID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MetadataSchemaUGID");
                OnMetadataSchemaUGIDChanged();
            }
        }
        private global::System.Guid _MetadataSchemaUGID;
        partial void OnMetadataSchemaUGIDChanging(global::System.Guid value);
        partial void OnMetadataSchemaUGIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MetadataXML
        {
            get
            {
                return _MetadataXML;
            }
            set
            {
                OnMetadataXMLChanging(value);
                ReportPropertyChanging("MetadataXML");
                _MetadataXML = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MetadataXML");
                OnMetadataXMLChanged();
            }
        }
        private global::System.String _MetadataXML;
        partial void OnMetadataXMLChanging(global::System.String value);
        partial void OnMetadataXMLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                if (_DateCreated != value)
                {
                    OnDateCreatedChanging(value);
                    ReportPropertyChanging("DateCreated");
                    _DateCreated = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DateCreated");
                    OnDateCreatedChanged();
                }
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid EditingUserGUID
        {
            get
            {
                return _EditingUserGUID;
            }
            set
            {
                OnEditingUserGUIDChanging(value);
                ReportPropertyChanging("EditingUserGUID");
                _EditingUserGUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EditingUserGUID");
                OnEditingUserGUIDChanged();
            }
        }
        private global::System.Guid _EditingUserGUID;
        partial void OnEditingUserGUIDChanging(global::System.Guid value);
        partial void OnEditingUserGUIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_Language_LanguageCode_Metadata_LanguageCode", "Language")]
        public Language Language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("MCMModel.FK_Language_LanguageCode_Metadata_LanguageCode", "Language").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("MCMModel.FK_Language_LanguageCode_Metadata_LanguageCode", "Language").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Language> LanguageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("MCMModel.FK_Language_LanguageCode_Metadata_LanguageCode", "Language");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Language>("MCMModel.FK_Language_LanguageCode_Metadata_LanguageCode", "Language", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_MetadataSchema_GUID_Metadata_MetadataSchemaGUID", "MetadataSchema")]
        public MetadataSchema MetadataSchema
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetadataSchema>("MCMModel.FK_MetadataSchema_GUID_Metadata_MetadataSchemaGUID", "MetadataSchema").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetadataSchema>("MCMModel.FK_MetadataSchema_GUID_Metadata_MetadataSchemaGUID", "MetadataSchema").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MetadataSchema> MetadataSchemaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetadataSchema>("MCMModel.FK_MetadataSchema_GUID_Metadata_MetadataSchemaGUID", "MetadataSchema");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MetadataSchema>("MCMModel.FK_MetadataSchema_GUID_Metadata_MetadataSchemaGUID", "MetadataSchema", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCMModel", Name="MetadataSchema")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MetadataSchema : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MetadataSchema object.
        /// </summary>
        /// <param name="gUID">Initial value of the GUID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="schemaXML">Initial value of the SchemaXML property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static MetadataSchema CreateMetadataSchema(global::System.Guid gUID, global::System.String name, global::System.String schemaXML, global::System.DateTime dateCreated)
        {
            MetadataSchema metadataSchema = new MetadataSchema();
            metadataSchema.GUID = gUID;
            metadataSchema.Name = name;
            metadataSchema.SchemaXML = schemaXML;
            metadataSchema.DateCreated = dateCreated;
            return metadataSchema;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GUID
        {
            get
            {
                return _GUID;
            }
            set
            {
                if (_GUID != value)
                {
                    OnGUIDChanging(value);
                    ReportPropertyChanging("GUID");
                    _GUID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GUID");
                    OnGUIDChanged();
                }
            }
        }
        private global::System.Guid _GUID;
        partial void OnGUIDChanging(global::System.Guid value);
        partial void OnGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SchemaXML
        {
            get
            {
                return _SchemaXML;
            }
            set
            {
                OnSchemaXMLChanging(value);
                ReportPropertyChanging("SchemaXML");
                _SchemaXML = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SchemaXML");
                OnSchemaXMLChanged();
            }
        }
        private global::System.String _SchemaXML;
        partial void OnSchemaXMLChanging(global::System.String value);
        partial void OnSchemaXMLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_MetadataSchema_GUID_Metadata_MetadataSchemaGUID", "Metadata")]
        public EntityCollection<Metadata> Metadata
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Metadata>("MCMModel.FK_MetadataSchema_GUID_Metadata_MetadataSchemaGUID", "Metadata");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Metadata>("MCMModel.FK_MetadataSchema_GUID_Metadata_MetadataSchemaGUID", "Metadata", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_MS_GUID_MS_Group_Join_MSGUID", "MetadataSchema_Group_Join")]
        public EntityCollection<MetadataSchema_Group_Join> MetadataSchema_Group_Join
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MetadataSchema_Group_Join>("MCMModel.FK_MS_GUID_MS_Group_Join_MSGUID", "MetadataSchema_Group_Join");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MetadataSchema_Group_Join>("MCMModel.FK_MS_GUID_MS_Group_Join_MSGUID", "MetadataSchema_Group_Join", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_MS_GUID_MS_User_Join_MetadataSchemaGUID", "MetadataSchema_User_Join")]
        public EntityCollection<MetadataSchema_User_Join> MetadataSchema_User_Join
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MetadataSchema_User_Join>("MCMModel.FK_MS_GUID_MS_User_Join_MetadataSchemaGUID", "MetadataSchema_User_Join");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MetadataSchema_User_Join>("MCMModel.FK_MS_GUID_MS_User_Join_MetadataSchemaGUID", "MetadataSchema_User_Join", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCMModel", Name="MetadataSchema_Group_Join")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MetadataSchema_Group_Join : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MetadataSchema_Group_Join object.
        /// </summary>
        /// <param name="metadataSchemaGUID">Initial value of the MetadataSchemaGUID property.</param>
        /// <param name="groupGUID">Initial value of the GroupGUID property.</param>
        /// <param name="permission">Initial value of the Permission property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static MetadataSchema_Group_Join CreateMetadataSchema_Group_Join(global::System.Guid metadataSchemaGUID, global::System.Guid groupGUID, global::System.Int64 permission, global::System.DateTime dateCreated)
        {
            MetadataSchema_Group_Join metadataSchema_Group_Join = new MetadataSchema_Group_Join();
            metadataSchema_Group_Join.MetadataSchemaGUID = metadataSchemaGUID;
            metadataSchema_Group_Join.GroupGUID = groupGUID;
            metadataSchema_Group_Join.Permission = permission;
            metadataSchema_Group_Join.DateCreated = dateCreated;
            return metadataSchema_Group_Join;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MetadataSchemaGUID
        {
            get
            {
                return _MetadataSchemaGUID;
            }
            set
            {
                if (_MetadataSchemaGUID != value)
                {
                    OnMetadataSchemaGUIDChanging(value);
                    ReportPropertyChanging("MetadataSchemaGUID");
                    _MetadataSchemaGUID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MetadataSchemaGUID");
                    OnMetadataSchemaGUIDChanged();
                }
            }
        }
        private global::System.Guid _MetadataSchemaGUID;
        partial void OnMetadataSchemaGUIDChanging(global::System.Guid value);
        partial void OnMetadataSchemaGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GroupGUID
        {
            get
            {
                return _GroupGUID;
            }
            set
            {
                if (_GroupGUID != value)
                {
                    OnGroupGUIDChanging(value);
                    ReportPropertyChanging("GroupGUID");
                    _GroupGUID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GroupGUID");
                    OnGroupGUIDChanged();
                }
            }
        }
        private global::System.Guid _GroupGUID;
        partial void OnGroupGUIDChanging(global::System.Guid value);
        partial void OnGroupGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Permission
        {
            get
            {
                return _Permission;
            }
            set
            {
                OnPermissionChanging(value);
                ReportPropertyChanging("Permission");
                _Permission = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Permission");
                OnPermissionChanged();
            }
        }
        private global::System.Int64 _Permission;
        partial void OnPermissionChanging(global::System.Int64 value);
        partial void OnPermissionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_MS_GUID_MS_Group_Join_MSGUID", "MetadataSchema")]
        public MetadataSchema MetadataSchema
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetadataSchema>("MCMModel.FK_MS_GUID_MS_Group_Join_MSGUID", "MetadataSchema").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetadataSchema>("MCMModel.FK_MS_GUID_MS_Group_Join_MSGUID", "MetadataSchema").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MetadataSchema> MetadataSchemaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetadataSchema>("MCMModel.FK_MS_GUID_MS_Group_Join_MSGUID", "MetadataSchema");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MetadataSchema>("MCMModel.FK_MS_GUID_MS_Group_Join_MSGUID", "MetadataSchema", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCMModel", Name="MetadataSchema_User_Join")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MetadataSchema_User_Join : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MetadataSchema_User_Join object.
        /// </summary>
        /// <param name="metadataSchemaGUID">Initial value of the MetadataSchemaGUID property.</param>
        /// <param name="userGUID">Initial value of the UserGUID property.</param>
        /// <param name="permission">Initial value of the Permission property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static MetadataSchema_User_Join CreateMetadataSchema_User_Join(global::System.Guid metadataSchemaGUID, global::System.Guid userGUID, global::System.Int64 permission, global::System.DateTime dateCreated)
        {
            MetadataSchema_User_Join metadataSchema_User_Join = new MetadataSchema_User_Join();
            metadataSchema_User_Join.MetadataSchemaGUID = metadataSchemaGUID;
            metadataSchema_User_Join.UserGUID = userGUID;
            metadataSchema_User_Join.Permission = permission;
            metadataSchema_User_Join.DateCreated = dateCreated;
            return metadataSchema_User_Join;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MetadataSchemaGUID
        {
            get
            {
                return _MetadataSchemaGUID;
            }
            set
            {
                if (_MetadataSchemaGUID != value)
                {
                    OnMetadataSchemaGUIDChanging(value);
                    ReportPropertyChanging("MetadataSchemaGUID");
                    _MetadataSchemaGUID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MetadataSchemaGUID");
                    OnMetadataSchemaGUIDChanged();
                }
            }
        }
        private global::System.Guid _MetadataSchemaGUID;
        partial void OnMetadataSchemaGUIDChanging(global::System.Guid value);
        partial void OnMetadataSchemaGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserGUID
        {
            get
            {
                return _UserGUID;
            }
            set
            {
                if (_UserGUID != value)
                {
                    OnUserGUIDChanging(value);
                    ReportPropertyChanging("UserGUID");
                    _UserGUID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserGUID");
                    OnUserGUIDChanged();
                }
            }
        }
        private global::System.Guid _UserGUID;
        partial void OnUserGUIDChanging(global::System.Guid value);
        partial void OnUserGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Permission
        {
            get
            {
                return _Permission;
            }
            set
            {
                OnPermissionChanging(value);
                ReportPropertyChanging("Permission");
                _Permission = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Permission");
                OnPermissionChanged();
            }
        }
        private global::System.Int64 _Permission;
        partial void OnPermissionChanging(global::System.Int64 value);
        partial void OnPermissionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_MS_GUID_MS_User_Join_MetadataSchemaGUID", "MetadataSchema")]
        public MetadataSchema MetadataSchema
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetadataSchema>("MCMModel.FK_MS_GUID_MS_User_Join_MetadataSchemaGUID", "MetadataSchema").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetadataSchema>("MCMModel.FK_MS_GUID_MS_User_Join_MetadataSchemaGUID", "MetadataSchema").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MetadataSchema> MetadataSchemaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetadataSchema>("MCMModel.FK_MS_GUID_MS_User_Join_MetadataSchemaGUID", "MetadataSchema");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MetadataSchema>("MCMModel.FK_MS_GUID_MS_User_Join_MetadataSchemaGUID", "MetadataSchema", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCMModel", Name="Object_Folder_Join")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Object_Folder_Join : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Object_Folder_Join object.
        /// </summary>
        /// <param name="objectGUID">Initial value of the ObjectGUID property.</param>
        /// <param name="folderID">Initial value of the FolderID property.</param>
        /// <param name="objectFolderTypeID">Initial value of the ObjectFolderTypeID property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static Object_Folder_Join CreateObject_Folder_Join(global::System.Guid objectGUID, global::System.Int64 folderID, global::System.Int64 objectFolderTypeID, global::System.DateTime dateCreated)
        {
            Object_Folder_Join object_Folder_Join = new Object_Folder_Join();
            object_Folder_Join.ObjectGUID = objectGUID;
            object_Folder_Join.FolderID = folderID;
            object_Folder_Join.ObjectFolderTypeID = objectFolderTypeID;
            object_Folder_Join.DateCreated = dateCreated;
            return object_Folder_Join;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ObjectGUID
        {
            get
            {
                return _ObjectGUID;
            }
            set
            {
                if (_ObjectGUID != value)
                {
                    OnObjectGUIDChanging(value);
                    ReportPropertyChanging("ObjectGUID");
                    _ObjectGUID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectGUID");
                    OnObjectGUIDChanged();
                }
            }
        }
        private global::System.Guid _ObjectGUID;
        partial void OnObjectGUIDChanging(global::System.Guid value);
        partial void OnObjectGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FolderID
        {
            get
            {
                return _FolderID;
            }
            set
            {
                if (_FolderID != value)
                {
                    OnFolderIDChanging(value);
                    ReportPropertyChanging("FolderID");
                    _FolderID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FolderID");
                    OnFolderIDChanged();
                }
            }
        }
        private global::System.Int64 _FolderID;
        partial void OnFolderIDChanging(global::System.Int64 value);
        partial void OnFolderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ObjectFolderTypeID
        {
            get
            {
                return _ObjectFolderTypeID;
            }
            set
            {
                OnObjectFolderTypeIDChanging(value);
                ReportPropertyChanging("ObjectFolderTypeID");
                _ObjectFolderTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ObjectFolderTypeID");
                OnObjectFolderTypeIDChanged();
            }
        }
        private global::System.Int64 _ObjectFolderTypeID;
        partial void OnObjectFolderTypeIDChanging(global::System.Int64 value);
        partial void OnObjectFolderTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_Folder_ID_Object_Folder_Join_FolderID", "Folder")]
        public Folder Folder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("MCMModel.FK_Folder_ID_Object_Folder_Join_FolderID", "Folder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("MCMModel.FK_Folder_ID_Object_Folder_Join_FolderID", "Folder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Folder> FolderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("MCMModel.FK_Folder_ID_Object_Folder_Join_FolderID", "Folder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Folder>("MCMModel.FK_Folder_ID_Object_Folder_Join_FolderID", "Folder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_ObjectFolderType_ID_Object_Folder_Join_ObjectFolderTypeID", "ObjectFolderType")]
        public ObjectFolderType ObjectFolderType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ObjectFolderType>("MCMModel.FK_ObjectFolderType_ID_Object_Folder_Join_ObjectFolderTypeID", "ObjectFolderType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ObjectFolderType>("MCMModel.FK_ObjectFolderType_ID_Object_Folder_Join_ObjectFolderTypeID", "ObjectFolderType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ObjectFolderType> ObjectFolderTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ObjectFolderType>("MCMModel.FK_ObjectFolderType_ID_Object_Folder_Join_ObjectFolderTypeID", "ObjectFolderType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ObjectFolderType>("MCMModel.FK_ObjectFolderType_ID_Object_Folder_Join_ObjectFolderTypeID", "ObjectFolderType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCMModel", Name="Object_Object_Join")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Object_Object_Join : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Object_Object_Join object.
        /// </summary>
        /// <param name="object1GUID">Initial value of the Object1GUID property.</param>
        /// <param name="object2GUID">Initial value of the Object2GUID property.</param>
        /// <param name="objectRelationTypeID">Initial value of the ObjectRelationTypeID property.</param>
        /// <param name="sequence">Initial value of the Sequence property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static Object_Object_Join CreateObject_Object_Join(global::System.Guid object1GUID, global::System.Guid object2GUID, global::System.Int64 objectRelationTypeID, global::System.Int32 sequence, global::System.DateTime dateCreated)
        {
            Object_Object_Join object_Object_Join = new Object_Object_Join();
            object_Object_Join.Object1GUID = object1GUID;
            object_Object_Join.Object2GUID = object2GUID;
            object_Object_Join.ObjectRelationTypeID = objectRelationTypeID;
            object_Object_Join.Sequence = sequence;
            object_Object_Join.DateCreated = dateCreated;
            return object_Object_Join;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Object1GUID
        {
            get
            {
                return _Object1GUID;
            }
            set
            {
                if (_Object1GUID != value)
                {
                    OnObject1GUIDChanging(value);
                    ReportPropertyChanging("Object1GUID");
                    _Object1GUID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Object1GUID");
                    OnObject1GUIDChanged();
                }
            }
        }
        private global::System.Guid _Object1GUID;
        partial void OnObject1GUIDChanging(global::System.Guid value);
        partial void OnObject1GUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Object2GUID
        {
            get
            {
                return _Object2GUID;
            }
            set
            {
                if (_Object2GUID != value)
                {
                    OnObject2GUIDChanging(value);
                    ReportPropertyChanging("Object2GUID");
                    _Object2GUID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Object2GUID");
                    OnObject2GUIDChanged();
                }
            }
        }
        private global::System.Guid _Object2GUID;
        partial void OnObject2GUIDChanging(global::System.Guid value);
        partial void OnObject2GUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ObjectRelationTypeID
        {
            get
            {
                return _ObjectRelationTypeID;
            }
            set
            {
                OnObjectRelationTypeIDChanging(value);
                ReportPropertyChanging("ObjectRelationTypeID");
                _ObjectRelationTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ObjectRelationTypeID");
                OnObjectRelationTypeIDChanged();
            }
        }
        private global::System.Int64 _ObjectRelationTypeID;
        partial void OnObjectRelationTypeIDChanging(global::System.Int64 value);
        partial void OnObjectRelationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sequence
        {
            get
            {
                return _Sequence;
            }
            set
            {
                OnSequenceChanging(value);
                ReportPropertyChanging("Sequence");
                _Sequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sequence");
                OnSequenceChanged();
            }
        }
        private global::System.Int32 _Sequence;
        partial void OnSequenceChanging(global::System.Int32 value);
        partial void OnSequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_ObjectRelationType_ID_Object_Object_Join_ObjectRelationTypeID", "ObjectRelationType")]
        public ObjectRelationType ObjectRelationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ObjectRelationType>("MCMModel.FK_ObjectRelationType_ID_Object_Object_Join_ObjectRelationTypeID", "ObjectRelationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ObjectRelationType>("MCMModel.FK_ObjectRelationType_ID_Object_Object_Join_ObjectRelationTypeID", "ObjectRelationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ObjectRelationType> ObjectRelationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ObjectRelationType>("MCMModel.FK_ObjectRelationType_ID_Object_Object_Join_ObjectRelationTypeID", "ObjectRelationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ObjectRelationType>("MCMModel.FK_ObjectRelationType_ID_Object_Object_Join_ObjectRelationTypeID", "ObjectRelationType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCMModel", Name="ObjectFolderType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ObjectFolderType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ObjectFolderType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ObjectFolderType CreateObjectFolderType(global::System.Int64 id, global::System.String name)
        {
            ObjectFolderType objectFolderType = new ObjectFolderType();
            objectFolderType.ID = id;
            objectFolderType.Name = name;
            return objectFolderType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_ObjectFolderType_ID_Object_Folder_Join_ObjectFolderTypeID", "Object_Folder_Join")]
        public EntityCollection<Object_Folder_Join> Object_Folder_Join
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Object_Folder_Join>("MCMModel.FK_ObjectFolderType_ID_Object_Folder_Join_ObjectFolderTypeID", "Object_Folder_Join");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Object_Folder_Join>("MCMModel.FK_ObjectFolderType_ID_Object_Folder_Join_ObjectFolderTypeID", "Object_Folder_Join", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCMModel", Name="ObjectRelationType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ObjectRelationType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ObjectRelationType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ObjectRelationType CreateObjectRelationType(global::System.Int64 id, global::System.String name)
        {
            ObjectRelationType objectRelationType = new ObjectRelationType();
            objectRelationType.ID = id;
            objectRelationType.Name = name;
            return objectRelationType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCMModel", "FK_ObjectRelationType_ID_Object_Object_Join_ObjectRelationTypeID", "Object_Object_Join")]
        public EntityCollection<Object_Object_Join> Object_Object_Join
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Object_Object_Join>("MCMModel.FK_ObjectRelationType_ID_Object_Object_Join_ObjectRelationTypeID", "Object_Object_Join");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Object_Object_Join>("MCMModel.FK_ObjectRelationType_ID_Object_Object_Join_ObjectRelationTypeID", "Object_Object_Join", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCMModel", Name="ObjectType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ObjectType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ObjectType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ObjectType CreateObjectType(global::System.Int64 id, global::System.String name)
        {
            ObjectType objectType = new ObjectType();
            objectType.ID = id;
            objectType.Name = name;
            return objectType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCMModel", Name="Permission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Permission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Permission object.
        /// </summary>
        /// <param name="tableIdentifier">Initial value of the TableIdentifier property.</param>
        /// <param name="permission1">Initial value of the Permission1 property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Permission CreatePermission(global::System.String tableIdentifier, global::System.Int64 permission1, global::System.String name)
        {
            Permission permission = new Permission();
            permission.TableIdentifier = tableIdentifier;
            permission.Permission1 = permission1;
            permission.Name = name;
            return permission;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TableIdentifier
        {
            get
            {
                return _TableIdentifier;
            }
            set
            {
                if (_TableIdentifier != value)
                {
                    OnTableIdentifierChanging(value);
                    ReportPropertyChanging("TableIdentifier");
                    _TableIdentifier = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TableIdentifier");
                    OnTableIdentifierChanged();
                }
            }
        }
        private global::System.String _TableIdentifier;
        partial void OnTableIdentifierChanging(global::System.String value);
        partial void OnTableIdentifierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Permission1
        {
            get
            {
                return _Permission1;
            }
            set
            {
                if (_Permission1 != value)
                {
                    OnPermission1Changing(value);
                    ReportPropertyChanging("Permission1");
                    _Permission1 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Permission1");
                    OnPermission1Changed();
                }
            }
        }
        private global::System.Int64 _Permission1;
        partial void OnPermission1Changing(global::System.Int64 value);
        partial void OnPermission1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
    }

    #endregion
    
}
